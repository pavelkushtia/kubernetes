# TweetStream Helm Chart Values
# This file contains all configurable parameters for the TweetStream application

# Global settings
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: "local-path"

# Application metadata
app:
  name: tweetstream
  version: "1.0.0"

# API Service Configuration
api:
  enabled: true
  name: tweetstream-api
  image:
    repository: node
    tag: "18-alpine"
    pullPolicy: IfNotPresent
  
  replicaCount: 3
  
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "200m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
  
  env:
    NODE_ENV: "production"
    PORT: "3000"
    # Database connection will be templated
    # Redis connection will be templated
    # Kafka connection will be templated
  
  livenessProbe:
    httpGet:
      path: /health
      port: 3000
    initialDelaySeconds: 30
    periodSeconds: 10
  
  readinessProbe:
    httpGet:
      path: /ready
      port: 3000
    initialDelaySeconds: 5
    periodSeconds: 5

# Frontend Service Configuration
frontend:
  enabled: true
  name: tweetstream-frontend
  image:
    repository: nginx
    tag: "1.25-alpine"
    pullPolicy: IfNotPresent
  
  replicaCount: 2
  
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70
  
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 80

# Database Configuration (Custom PostgreSQL)
database:
  enabled: true
  name: postgres-primary
  
  # Use custom PostgreSQL instead of Bitnami chart
  useCustom: true
  
  image:
    repository: postgres
    tag: "15-alpine"
    pullPolicy: IfNotPresent
  
  auth:
    database: "tweetstream"
    username: "tweetuser"
    password: "tweetpass123"
  
  persistence:
    enabled: true
    storageClass: "local-path"
    size: "10Gi"
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "200m"
  
  service:
    type: ClusterIP
    port: 5432

# Redis Configuration (Custom Redis)
redis:
  enabled: true
  name: redis
  
  # Use custom Redis instead of Bitnami chart
  useCustom: true
  
  image:
    repository: redis
    tag: "7-alpine"
    pullPolicy: IfNotPresent
  
  auth:
    enabled: false
    password: ""
  
  persistence:
    enabled: true
    storageClass: "local-path"
    size: "1Gi"
  
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  
  service:
    type: ClusterIP
    port: 6379

# Kafka Configuration (Custom Kafka with KRaft)
kafka:
  enabled: true
  name: kafka
  
  # Use custom Kafka instead of Bitnami chart
  useCustom: true
  
  image:
    repository: confluentinc/cp-kafka
    tag: "7.4.0"
    pullPolicy: IfNotPresent
  
  replicaCount: 1
  
  kraft:
    enabled: true
    clusterId: "tweetstream-kafka-cluster"
  
  persistence:
    enabled: true
    storageClass: "local-path"
    size: "5Gi"
  
  resources:
    requests:
      memory: "512Mi"
      cpu: "300m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  
  service:
    type: ClusterIP
    port: 9092

# Monitoring Configuration
monitoring:
  enabled: true
  
  # Prometheus ServiceMonitor
  serviceMonitor:
    enabled: true
    namespace: monitoring
    interval: 30s
  
  # Grafana Dashboard
  grafanaDashboard:
    enabled: true
    namespace: monitoring
  
  # Prometheus Rules (Alerts)
  prometheusRules:
    enabled: true
    namespace: monitoring

# Ingress Configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  
  hosts:
    - host: tweetstream.192.168.1.82.nip.io
      paths:
        - path: /
          pathType: Prefix
          service: frontend
        - path: /api
          pathType: Prefix
          service: api
  
  tls: []

# Network Policies
networkPolicy:
  enabled: false

# Pod Security Context
podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

# Security Context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

# Node Selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# External Dependencies (Bitnami Charts)
postgresql:
  enabled: false  # We use custom PostgreSQL

redis:
  enabled: false  # We use custom Redis

kafka:
  enabled: false  # We use custom Kafka 