---
# TweetStream ArgoCD Application
# This defines how ArgoCD should deploy and manage TweetStream from Git

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tweetstream
  namespace: argocd
  labels:
    app.kubernetes.io/name: tweetstream
    app.kubernetes.io/part-of: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # Project (use default for now)
  project: default
  
  # Source configuration - Git repository
  source:
    # Replace with your actual Git repository URL
    repoURL: https://github.com/YOUR_USERNAME/kubernetes-tweetstream.git
    targetRevision: HEAD
    path: tweetstream-app
    
    # Directory structure in the repo
    directory:
      recurse: true
      include: |
        tweetstream-app.yaml
        monitoring-exporters.yaml
        grafana-dashboard.yaml
  
  # Destination configuration
  destination:
    server: https://kubernetes.default.svc
    namespace: tweetstream
  
  # Sync policy
  syncPolicy:
    # Automated sync configuration
    automated:
      prune: true      # Remove resources not in Git
      selfHeal: true   # Automatically fix drift
      allowEmpty: false
    
    # Sync options
    syncOptions:
    - CreateNamespace=true    # Create namespace if it doesn't exist
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    - ApplyOutOfSyncOnly=true
    
    # Retry configuration
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  
  # Health check configuration
  ignoreDifferences:
  - group: apps
    kind: Deployment
    jsonPointers:
    - /spec/replicas  # Ignore HPA-managed replica counts
  
  # Revision history limit
  revisionHistoryLimit: 10

---
# TweetStream ArgoCD Project (Optional - for better organization)
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: tweetstream-project
  namespace: argocd
  labels:
    app.kubernetes.io/name: tweetstream-project
    app.kubernetes.io/part-of: argocd
spec:
  description: TweetStream Twitter Clone Application Project
  
  # Source repositories
  sourceRepos:
  - 'https://github.com/YOUR_USERNAME/kubernetes-tweetstream.git'
  - 'https://github.com/*'  # Allow any GitHub repo for flexibility
  
  # Destination clusters and namespaces
  destinations:
  - namespace: tweetstream
    server: https://kubernetes.default.svc
  - namespace: monitoring
    server: https://kubernetes.default.svc
  
  # Cluster resource whitelist
  clusterResourceWhitelist:
  - group: ''
    kind: Namespace
  - group: rbac.authorization.k8s.io
    kind: ClusterRole
  - group: rbac.authorization.k8s.io
    kind: ClusterRoleBinding
  - group: monitoring.coreos.com
    kind: ServiceMonitor
  - group: monitoring.coreos.com
    kind: PrometheusRule
  
  # Namespace resource whitelist
  namespaceResourceWhitelist:
  - group: ''
    kind: ConfigMap
  - group: ''
    kind: Secret
  - group: ''
    kind: Service
  - group: ''
    kind: PersistentVolumeClaim
  - group: apps
    kind: Deployment
  - group: apps
    kind: StatefulSet
  - group: autoscaling
    kind: HorizontalPodAutoscaler
  - group: networking.k8s.io
    kind: Ingress
  
  # RBAC configuration
  roles:
  - name: tweetstream-admin
    description: Admin access to TweetStream application
    policies:
    - p, proj:tweetstream-project:tweetstream-admin, applications, *, tweetstream-project/*, allow
    - p, proj:tweetstream-project:tweetstream-admin, repositories, *, *, allow
    groups:
    - argocd-admins
  
  - name: tweetstream-developer
    description: Developer access to TweetStream application
    policies:
    - p, proj:tweetstream-project:tweetstream-developer, applications, get, tweetstream-project/*, allow
    - p, proj:tweetstream-project:tweetstream-developer, applications, sync, tweetstream-project/*, allow
    - p, proj:tweetstream-project:tweetstream-developer, repositories, get, *, allow
    groups:
    - tweetstream-developers

---
# Alternative Application using the Project
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tweetstream-with-project
  namespace: argocd
  labels:
    app.kubernetes.io/name: tweetstream-with-project
    app.kubernetes.io/part-of: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # Use the custom project
  project: tweetstream-project
  
  # Source configuration
  source:
    repoURL: https://github.com/YOUR_USERNAME/kubernetes-tweetstream.git
    targetRevision: HEAD
    path: tweetstream-app
    
    directory:
      recurse: true
      include: |
        tweetstream-app.yaml
        monitoring-exporters.yaml
        grafana-dashboard.yaml
  
  # Destination
  destination:
    server: https://kubernetes.default.svc
    namespace: tweetstream
  
  # Enhanced sync policy
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    - ApplyOutOfSyncOnly=true
    - RespectIgnoreDifferences=true
    
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  
  # Ignore differences for HPA-managed resources
  ignoreDifferences:
  - group: apps
    kind: Deployment
    name: tweetstream-api
    jsonPointers:
    - /spec/replicas
  - group: apps
    kind: Deployment
    name: tweetstream-frontend
    jsonPointers:
    - /spec/replicas
  
  revisionHistoryLimit: 10 